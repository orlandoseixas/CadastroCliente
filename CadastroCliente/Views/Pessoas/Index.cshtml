@{
  ViewBag.Title = "Consulta de Clientes";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
  @Html.AntiForgeryToken()
}

<h2>@ViewBag.Title</h2>

<p>
  @Html.ActionLink("+ Criar Novo Cliente", "Create")
</p>

<div id="root"></div>



<script type="text/babel">
  const PessoaRow = React.createClass({
  render : function(){
  return (
  <tr>
    <td>{this.props.item.Nome}</td>
    <td>{this.props.item.SobreNome}</td>
    <td>{this.props.item.Endereco}</td>
    <td>
      <input type="submit" value="Editar" onClick={() => editarPessoa(this.props.item.Id)} className="btn btn-default btn-sm" />
      <input type="submit" value="Remover" onClick={() => removerPessoa(this.props.item.Id)}  className="btn btn-default btn-sm"/>

    </td>
  </tr>
  );
  }
  });

  function editarPessoa(id)
  {
  location.href="/Pessoas/Edit/" + id;
  }


  function removerPessoa(id)
  {
  if(!confirm("Tem certeza que deseja remover esta pessoa?"))
  {
    return;
  }

  const form = $('#__AjaxAntiForgeryForm');
  const token = $('input[name="__RequestVerificationToken"]', form).val();

  $.ajax({
  type: "POST",
  url: "/Pessoas/Delete",
  data: {
  __RequestVerificationToken: token,
  id: id
  },
  success: function() {alert('O Cliente foi removido.');},
  error: function() {alert('Não foi possível remover o cliente selecionado.');}
  });
  }

  const PessoaTable = React.createClass({
  getInitialState: function(){
  return {
  items:[]
  }
  },

  render : function(){

  $.get(this.props.dataUrl, function(data){
  if(this.isMounted()){
  this.setState({
  items: data
  });
  }
  }.bind(this));

  const rows = [];
  this.state.items.forEach(function(item){
  rows.push(
  <PessoaRow key={item.Id} item={item} />);
  });
  return (
  <table className="table table-responsive">
    <thead>
      <tr>
        <th>Nome</th>
        <th>Sobrenome</th>
        <th>Endereço</th>
        <th>Ações</th>
      </tr>
    </thead>
    <tbody>
      {rows}
    </tbody>
  </table>);
  }
  });


  class FiltroConsulta extends React.Component {
  constructor(props) {
  super(props);
  this.state = {value: ''};

  this.handleChange = this.handleChange.bind(this);
  this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleChange(event) {
  this.setState({value: event.target.value});
  }

  handleSubmit(event) {
  event.preventDefault();

  const urlBusca = "/Pessoas/GetPessoasData?textoBusca="+ this.state.value;
  ReactDOM.render(
  <PessoaTable dataUrl={urlBusca} />,
  document.getElementById('griddata')
  );

  }

  render() {
  return (
  <div>
    <form onSubmit={this.handleSubmit}>
      <input type="text" value={this.state.value} onChange={this.handleChange} id="inputNome" placeholder="Nome ou Sobrenome" className="form-control text-box single-line" />
      <input type="submit" value="Consultar" className="btn btn-default" />
    </form>
    <div id="griddata"></div>
  </div>
  );
  }
  }

  ReactDOM.render(
  <FiltroConsulta />,
  document.getElementById('root')
  );

</script>
